# -*- coding: utf-8 -*-
"""2_ML_SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16Xm_gW-XQSK-YWedK7Lc6cRkWyaGZCb0
"""

# -*- coding: utf-8 -*-
"""ML_Lab2_ applySVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18buOsTc_ZjQa7c6Whh6JfmxQssQYP_e1
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset=pd.read_csv("/content/SocialNetworkAds.csv")
x=dataset.iloc[:,[0,1]].values
y=dataset.iloc[:,2].values

dataset.head(5)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.25)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.transform(x_test)

from sklearn.svm import SVC
classifier=SVC(kernel='rbf',random_state=0)
classifier.fit(x_train, y_train)

y_pred=classifier.predict(x_test)
y_pred

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test, y_pred)
from sklearn.metrics import accuracy_score
print("Accuracy:", accuracy_score(y_test,y_pred))
cm

df=pd.DataFrame({'Real Values':y_test,'Predicted Values':y_pred})
df

from matplotlib.colors import ListedColormap
x_set, y_set=x_test, y_test
x1,x2=np.meshgrid(np.arange(start=x_set[:,0].min() -1, stop=x_set[:, 0].max()+1, step=0.01), np.arange(start=x_set[:, 1].min() -1,stop=x_set[:, 1].max() +1,step=0.01))
plt.contourf(x1,x2, classifier.predict(np.array([x1.ravel(),x2.ravel()]).T).reshape(x1.shape),alpha=0.75, cmap=ListedColormap(('red','green')))
plt.xlim(x1.min(), x1.max())
plt.ylim(x2.min(), x2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(x_set[y_set==j,0], x_set[y_set==j,1],
               c=ListedColormap(('red','green'))(i),label=j)
    plt.title('SVM Classification')
    plt.xlabel("Age")
    plt.ylabel("EstimatedSalary")
    plt.legend()
    plt.show()